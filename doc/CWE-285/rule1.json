{
  "schema": {
    "dangerous_functions": [
      [
        "perform_deletion",
        ["value.func.id"]
      ]
    ],
    "safe_functions": [
      [
        "current_user.is_admin",
        ["test.value.id", "test.attr"]
      ]
    ]
  },
  "ToFixIt": {
    "text": "Sanitize and validate file paths before using them. Avoid using user input directly in file operations."
  },
  "Kind": {
    "text": "Path Traversal (CWE-22)"
  },
  "Doc": {
    "what_is_an_issues": "Path Traversal occurs when user input is used to construct file paths without proper validation, allowing attackers to access files and directories outside the intended scope. This can lead to unauthorized access to system files, sensitive data, or even code execution if a malicious file is uploaded and executed.",
    "how_can_i_fix_it": "Always sanitize and validate user-supplied paths. Use functions like `os.path.join` and `os.path.abspath` to enforce directory boundaries.\n\n❌ Vulnerable example:\n```python\nfilename = request.args.get('file')\nwith open('/app/data/' + filename, 'r') as f:\n    data = f.read()\n```\n\n✅ Secure example:\n```python\nimport os\nfilename = request.args.get('file')\nbase_dir = '/app/data/'\nfilepath = os.path.abspath(os.path.join(base_dir, filename))\nif filepath.startswith(base_dir):\n    with open(filepath, 'r') as f:\n        data = f.read()\nelse:\n    abort(403)\n```",
    "more_info": "https://cwe.mitre.org/data/definitions/22.html"
  }
}
